Typescript
Khi chạy sẽ biên dịch sang JS. Nên dùng khi dự án lớn.



# Basic
-> Dùng typescript như JS bằng cách dùng as any tránh lỗi
Typescript dùng được enum
Dùng string! khi ta chắc chắn nó k thể null hoặc undefined
Dùng a ?: string 

-> Có 3 kiểu khai báo: type, interface, class

-> Playground: https://www.typescriptlang.org/play



# Tạo file tsconfig.json
Lệnh tsc sẽ compile mặc định mọi file ts kể từ thư mục hiện tại, nếu chạy cụ thể tsc 1 file nào đó như bth sẽ bỏ qua tsconfig.json => điều này làm 1 vài options cần có bị thiếu dẫn đến lỗi k thể compile trong 1 số TH
VD: Viết tsconfig.json -> compilerOptions có "outDir": "js" -> chạy lệnh tsc thư mục gốc k có tham số gì hết => toàn bộ file ts được compile ra trong thư mục js

-> "allowSyntheticDefaultImports": true, trong tsconfig giúp import được như bth: import React from "react";
Nếu k có buộc phải dùng: import * as React from "react"; với default export

-> "isolatedModules": true
Trong typscript mặc định mọi file ts đều phải có export để lấy ra ngoài (ES6, còn common js của nodejs ta k xét)
option isolatedModules sẽ check lỗi này, nếu 1 file k có export thì sẽ báo lỗi.

-> Dùng baseUrl chỉ thêm attribute path nếu ta muốn thêm tiền tố cho nó VD @ chẳng hạn
"baseUrl": ".",
"paths": {
    "@/*": ["./src/*"],
    "@/public/*": ["./public/*"]
}



# File declaration.d.ts
File này đôi lúc phải có mới import được. Dùng để định nghĩa type.

VD: Tạo react typescript bằng CRA, ta có thể import image tùy ý mà k cần đuôi file extension cũng như khai báo module gì. VD: import logo from "./logo";
Tạo react typescript bằng 1 số cách khác như trong sharepoint, ta phải import image from "./logo.svg"; và trong phải có 1 file.d.ts khai báo: declare module "*.svg" tương tự với từng loại ảnh sử dụng. 


